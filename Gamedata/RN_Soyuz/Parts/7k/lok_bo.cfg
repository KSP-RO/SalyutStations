PART
{
// --- general parameters ---
name = rn_lok_bo
module = Part
author = Raidernick

// --- asset parameters ---
MODEL
	{
	  model = RN_Soyuz/Parts/7k/lok_bo
          scale = 0.80, 0.80, 0.80
	}
//mesh = lok_bo.mu
scale = 0.80
rescaleFactor = 1

//CoMOffset = 0, -0.4, 0

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_top = 0, 2.39982, 0, 0.0, 1.0, 0.0
node_stack_bottom = 0, -1.16054, 0, 0.0, -1.0, 0.0
//node_stack_les = 0, 1.05, 0, 0.0, 1.0, 0.0

CrewCapacity = 2
vesselType = Ship

// --- editor parameters ---
TechRequired = generalRocketry
cost = 1100
category = Control
subcategory = 0
title = Soyuz 7K-LOK Orbital Module Drogue
manufacturer = RN Industries
description = Orbital module for the 7K-LOK.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 1.2
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 9
maxTemp = 2000
breakingForce = 50000
breakingTorque = 50000
linearStrength = 22000
angularStrength = 22000

MODULE
{
name = TankPriorityModule
Priority = 11
}

MODULE
{
name = RasterPropMonitorComputer
}

INTERNAL
{
  name = LOKOrbital
}

// ----- DO NOT EDIT BELOW THIS POINT ------

MODULE
{
    name = ModuleDecouple
    ejectionForce = 150
    explosiveNodeID = bottom
    staged = true
}

MODULE
{
    name = ModuleDockingNode
    referenceAttachNode = top
    nodeType = size1
}

MODULE
{
	name = ModuleRCS
	thrusterTransformName = RCSthruster 
	thrusterPower = 0.03
	resourceName = MonoPropellant
		resourceFlowMode = STAGE_PRIORITY_FLOW
	atmosphereCurve
 	{
   	 key = 0 260
  	 key = 1 100
 	}
}

MODULE
{
	name = ModuleDataTransmitter
	
	packetInterval = 0.24
	packetSize = 2
	
	packetResourceCost = 20.0
	requiredResource = ElectricCharge
		
	DeployFxModules = 0
}

//Connected Living
MODULE
{
	name = ModuleConnectedLivingSpace
	passable = true
}
MODULE
{
name = FSanimateGeneric
animationName = Deploy
startEventGUIName = Deploy Antennas
endEventGUIName = Undeploy Antennas
toggleActionName = Toggle Antennas
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 1
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 0
}

MODULE
{
name = FSanimateGeneric
animationName = wires
startEventGUIName = Remove Wires
endEventGUIName = Debug Add Wires
toggleActionName = Toggle Wires
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 2
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 1
}

	// 3 crew
	RESOURCE
	{
		name = Food
		amount = 13.164
		maxAmount = 13.164
	}
	RESOURCE
	{
		name = Water
		amount = 8.7
		maxAmount = 8.7
	}
	RESOURCE
	{
		name = Oxygen
		amount = 1332.448
		maxAmount = 1332.448
	}
	RESOURCE
	{
		name = CarbonDioxide
		amount = 0
		maxAmount = 0.1
	}
	RESOURCE
	{
		name = Waste
		amount = 0
		maxAmount = 1.5
	}
	RESOURCE
	{
		name = WasteWater
		amount = 0
		maxAmount = 0.1
	}

}